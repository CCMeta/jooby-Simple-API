package app;import java.util.*;import java.sql.*;import io.jooby.Context;import io.jooby.Jooby;import io.jooby.MediaType;import io.jooby.ServerOptions;import io.netty.buffer.ByteBuf;import io.netty.buffer.ByteBufUtil;import io.netty.handler.codec.http.DefaultFullHttpResponse;import io.netty.handler.codec.http.FullHttpResponse;import io.netty.handler.codec.http.HttpResponseStatus;import io.netty.handler.codec.http.HttpVersion;public class App extends Jooby {    private static ArrayList<String> fuck;    public static final String URL = "jdbc:postgresql://zaiwuhou.com:5432/postgres";    public static final String USER = "postgres";    public static final String PASSWORD = "19897216";    public static Connection db;    {        BadMotherfucker();        try {            db = DB();        } catch (ClassNotFoundException | SQLException e) {            e.printStackTrace();        }        get("/", ctx -> "Welcome to Booby !1");        get("/db", App::getDB);        get("/shit", ctx -> "fuck this shit bitch1");        get("/bad", ctx -> App.fuck.toString());    }    public static void main(final String[] args) {        runApp(args, App::new);    }    public static Object getDB(Context ctx) throws SQLException {        String sql = "SELECT json_agg(goods) FROM goods";        ResultSet rs = db.prepareStatement(sql).executeQuery();        rs.next();        var response_text = rs.getString(1);        System.out.println(rs.getString(1));        // i want content  but without fucking while loop        ctx.setDefaultResponseType(MediaType.json);        return response_text;//        return new DefaultFullHttpResponse(HttpVersion.HTTP_1_1, HttpResponseStatus.ACCEPTED);    }    private void BadMotherfucker() {        var fuck = "fuck this shit bitch1";        var list = new ArrayList<String>();        list.add("郑大世");        list.add("赵子惠");        list.forEach(System.out::println);        var copy = List.copyOf(list);        App.fuck = list;        System.out.println(copy.toString());        System.out.println(fuck);    }    private Connection DB() throws ClassNotFoundException, SQLException {        Class.forName("org.postgresql.Driver");        return DriverManager.getConnection(URL, USER, PASSWORD);    }}